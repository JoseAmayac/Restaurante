/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoGUI;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import Crud.CrudMesero;
import proyectomesas.Mesero;
import proyectomesas.Persona;

/**
 *
 * @author Hector
 */
public class VentanaMeseros extends javax.swing.JDialog  implements ActionListener,AdjustmentListener{
    ArrayList<Persona> meseros;
    JScrollPane scroll;
    ArrayList<JButton> b;
    JPanel panel;
    int pos = 10;
    int pos2 = 10;
    /**
     * Creates new form VentanaMeseros
     * @param parent
     * @param modal
     */
    public VentanaMeseros(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        this.b = new ArrayList<>();
        this.meseros = new ArrayList<>();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.pintarMeseros();
        
    }
    
    public void pintarMeseros()
    {        
       CrudMesero meseroCrud = new CrudMesero(null);
       meseros = meseroCrud.consultarTodos();

        Container c = this.getContentPane();
        panel = new JPanel();
        panel.setBackground(Color.white);
        panel.setLocation(0, 0);
        panel.setLayout(null);
        panel.setSize(this.getWidth(), this.getHeight());
        
        for (int i = 0; i < meseros.size(); i++) 
        {
            Mesero p = (Mesero)meseros.get(i);
            JPanel panel1 = new JPanel();
            //panel1.setBackground(Color.red);
            panel1.setSize(this.getWidth()-140,100);
            panel1.setLocation(10, pos2);
            pos2=110+pos2;
            panel1.setLayout(null);
            
            String inf = "<html>Nombre: "+p.getNombres()+"<br>" + "Apellido: "+p.getApellidos()+"<br>"+
                    "Correo: "+ p.getCorreo()+"<html>";

            
            JButton b =new JButton();
            b.setName("Seleccionar");
            b.setLocation(0, 0);
            b.setSize((this.getWidth()-140)/2,100);
            b.addActionListener(this);
            b.setBackground(Color.cyan);
            b.setLayout(null);
            b.setText(inf);
            b.setFocusable(false);
            b.setHorizontalAlignment(SwingConstants.LEFT);
            
            ImageIcon imagen = new ImageIcon("src/imagenes/meseros-1.png");
            JLabel label = new JLabel();
            label.setIcon(imagen);
            label.setBounds(160,0,(this.getWidth()-140)/2,100);
            //System.out.println((this.getWidth()-140)/2);
            panel1.add(label);

            this.b.add(b);

            panel1.add(b);
            panel.add(panel1);
        }
        
        JButton agregar =new JButton();
        agregar.setName("Agregar");
        agregar.setText("Agregar Mesero");
        agregar.setSize(130, 30);
        
        panel.setPreferredSize(new Dimension(this.getWidth(), 10+meseros.size()*110));
        agregar.setLocation((this.getWidth())-agregar.getWidth()+35,10);
        agregar.setFocusable(false);
        agregar.addActionListener(this);
        b.add(agregar);
        c.add(agregar);
        
        scroll = new JScrollPane(panel,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setSize(this.getWidth()-100, this.getHeight());
        this.setSize(scroll.getWidth()+agregar.getWidth()+30,scroll.getHeight()+30);
        scroll.setLocation(0, 0);
        JScrollBar p = scroll.getVerticalScrollBar();
        p.addAdjustmentListener(this);
        c.add(scroll);
        this.repaint();
       // this.setComponentZOrder(panel,0);  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void actionPerformed(ActionEvent e) {
        Mesero mesero;
        for (int i = 0; i < b.size(); i++)
        {
            if (e.getSource() == b.get(i) && b.get(i).getName().equals("Agregar")) 
            {
               VentanaAgregarMesero ventana = new VentanaAgregarMesero(null, true);
               ventana.iniciar();
               ventana.setVisible(true);
            }else
            {
                if (e.getSource() == b.get(i) && b.get(i).getName().equals("Seleccionar"))
                {
                    mesero = (Mesero)meseros.get(i);
                    int seleccion = this.mostrarOpciones();
                    this.verificarSeleccion(seleccion,mesero);
                }
            }
        }
    }
    
     public int mostrarOpciones()
    {
        int seleccion = JOptionPane.showOptionDialog( null,"Seleccione una opcion",
                     "Selector de opciones",JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,null,
                    new Object[] { "Eliminar", "Modificar"},"opcion 1");
        
        return seleccion;
    }
    
    public void  removerMesero(Mesero m)
    {
        CrudMesero controlador = new CrudMesero(null);
        controlador.eliminar(m.getCedula());
    }
    
    public void modificarMesero(Mesero m)
    {
        VentanaAgregarMesero ventana = new VentanaAgregarMesero(null, true);
        ventana.iniciar();
        ventana.setCedula(m.getCedula());
        System.out.println(m.getCedula());
        ventana.ocultarCedula();
        ventana.setNombres(m.getNombres());
        ventana.setApellidos(m.getApellidos());
        ventana.setTelefono(m.getTelefono());
        ventana.setCorreo(m.getCorreo());
        ventana.ocultarCorreo();
        ventana.setContraseña(m.getContraseña());
        ventana.ocultarContraseña();
        ventana.setDireccion(m.getDireccion());
        ventana.setObservaciones(m.getObservaciones());
        ventana.setVisible(true);
        
        boolean pulsado = ventana.isPulsador();
        
        if(pulsado)
        {
            m.setNombres(ventana.getjTNombres());
            m.setApellidos(ventana.getjTApellidos());
            m.setTelefono(ventana.getjTTelefono());
            m.setDireccion(ventana.getjTDireccion());
            m.setObservaciones(ventana.getjTObservaciones());
            
            CrudMesero controlador = new CrudMesero(m);
            int i = controlador.modificar();
            
            if(i == 1)
            {
                JOptionPane.showMessageDialog(this, "Mesero modificado");
            }else
            {
                JOptionPane.showMessageDialog(this, "No se pudo modificar los datos del mesero");
            }
        }
    }
    
    public void verificarSeleccion(int seleccion,Mesero m)
    {
        if (seleccion==0)
        {
            this.removerMesero(m);
            JOptionPane.showMessageDialog(this, "Mesero eliminado");
        }
        else
        {
            if (seleccion==1)
            {
                this.modificarMesero(m);
            }
        }
    }
    
    @Override
    public void adjustmentValueChanged(AdjustmentEvent ae) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
