/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoGUI;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectomesas.Cliente;
import Crud.CrudCliente;
import Crud.CrudFactura;
import Crud.CrudMesa;
import Crud.CrudPedidoProducto;
import Crud.Reporte;
import proyectomesas.Factura;
import proyectomesas.Mesero;
import proyectomesas.Pedido;
import proyectomesas.PedidoProducto;
import proyectomesas.Producto;

/**
 *
 * @author Hector
 */
public class VentanaBuscar extends javax.swing.JDialog
{
    Pedido pedido;
    VentanaFactura ventana;
    Factura factura;
    /**
     * Creates new form VentanaFactura
     */
    public VentanaBuscar(java.awt.Frame parent, boolean modal,Pedido pedido) {
        super(parent, modal);
        this.pedido = pedido;
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }
    
    
    public Cliente buscarCliente()
    {
        CrudCliente controlador = new CrudCliente(null);
        Cliente c = controlador.consultar(jTCedula.getText());
        System.out.println(jTCedula.getText());
        return c;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTCedula = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jTCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 40, 146, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Cedula");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 97, -1, -1));

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 97, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoR.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 130));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Cliente c = this.buscarCliente();
        
        if(c != null)
        {
            factura = new Factura(this.obtenerFecha(), c, pedido);
            ventana = new VentanaFactura(null, true);
            
            CrudFactura fact = new CrudFactura(factura);
            fact.insertar();
            generarFactura(c);
            ventana.setVisible(true);
            VentanaTabla ventana2 = new VentanaTabla(null, true);
            ventana2.setTabla(this.generarTablaReporte());
            ventana2.setVisible(true);
        }
        else
        {
            int respuesta = JOptionPane.showConfirmDialog(this, "El cliente no se encuentra en el sistema, desea registrarlo?");
            
            if(respuesta == 0)
            {
              VentanaRegistroCliente ventana = new VentanaRegistroCliente(null, true);
              ventana.setVisible(true);  
            }
            
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed
    
    public void generarFactura(Cliente c)
    {
        
        String inf = "<html>"+c.getNombres()+" "+c.getApellidos()+"<br>"
                +"Cc.:"+c.getCedula()+"<br>"
                +c.getDireccion() + "<br>"
                +c.getTelefono()+"<html>";
        ventana.setDatosCliente(inf);
        
        String inf2 = "<html>"+"No. Factura: "+factura.getId()+"<br>"
                +"No. Pedido: "+pedido.getId() + "<br>"
                +"No. Mesa: "+pedido.getMesa().getNumero()+"<br>"+"Fecha: "+factura.getFecha()
                +"<br>";
        ventana.setDatosFactura(inf2);
        Mesero m = pedido.getMesero();
        
        String inf3 = "<html>"+m.getNombres()+" "+m.getApellidos()+"<br>"+
                      m.getCorreo()+"<br>"+m.getTelefono();
        ventana.setDatosMesero(inf3);
        ventana.setTabla(this.generarTabla());
        ventana.setPrecio("$"+this.precioElementosFactura());
        pedido.getMesa().setEstado("libre");
        CrudMesa mesita = new CrudMesa(pedido.getMesa());
        mesita.modificar();
    }
    
    public float precioElementosFactura()
    {
        float  precio=0;
        
        CrudPedidoProducto controlador = new CrudPedidoProducto(null);
        ArrayList<PedidoProducto> productos = controlador.consultarTodosPedidos(pedido.getId());
        
        for(int i = 0; i < productos.size(); i++) 
        {
            Producto p = productos.get(i).getProducto();
            precio+=p.getPrecio();
        }
        return precio;
    }
    
    public Timestamp obtenerFecha()
    {
        Timestamp fechaR=null;
        Calendar fecha = new GregorianCalendar();
        int año = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH)+1;
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        int hora = fecha.get(Calendar.HOUR_OF_DAY);
        int minuto = fecha.get(Calendar.MINUTE);
        int segundo = fecha.get(Calendar.SECOND);
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
       
        try {
            fechaR = new java.sql.Timestamp(sdf.parse(año+"-"+mes+"-"+dia+" "+hora+":"+minuto+":"+segundo).getTime());
        } catch (ParseException ex)
        {
            //Logger.getLogger(NewMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        return fechaR;
    }
    
    public DefaultTableModel generarTabla()
    {
        DefaultTableModel modelo;
        String titulo[]={" Nombre "," Descripcion "," Precio "};
        CrudPedidoProducto controlador = new CrudPedidoProducto(null);
        ArrayList<PedidoProducto> productos = controlador.consultarTodosPedidos(pedido.getId());
        String [][] tabla = new String[productos.size()][3];
        for (int i = 0; i < productos.size(); i++)
        {
            Producto p = productos.get(i).getProducto();
            String[] datos=p.consultarInformación();
            tabla[i]=datos; 
        }
        modelo=new DefaultTableModel(tabla,titulo);
        return modelo;
    }
    
    
    public DefaultTableModel generarTablaReporte()
    {
        DefaultTableModel modelo;
        String titulo[]={" Nombre "," Cantidad "," Precio Total "};
        Reporte controlador = new Reporte();
        ArrayList<String[]> productos = controlador.consultarReporte(factura.getId());
        String [][] tabla = new String[productos.size()][3];
        for (int i = 0; i < productos.size(); i++)
        {
            tabla[i]=productos.get(i); 
        }
        modelo=new DefaultTableModel(tabla,titulo);
        return modelo;
    }
    
    
    

            

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTCedula;
    // End of variables declaration//GEN-END:variables
}
